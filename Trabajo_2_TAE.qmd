---
title: "Trabajo 2 TAE"
author: "Valentina Vanegas Castaño, Edwar Jose Londoño Correa, Andres Castrillón Velasquez, Diego Andres Chavarria Riaño, Sebastian Rendon Arteaga"
format: html
editor: visual
---

Carga del dataset

```{r}
d1<- read.csv("loan_data_2007_2014-1.csv", encoding = "UTF-8")
d2<- read.csv("loan_data_2007_2014-2.csv", encoding = "UTF-8")
d3<- read.csv("loan_data_2007_2014-3.csv", encoding = "UTF-8")
dt1<- rbind(d1,d2)
data <- rbind(dt1,d3)
```

Descripción de los datos

```{r}
summary(data)
```

En el resumen anterior, pudimos identificar que existen variables que todos sus valores son N/A. A continuación de examinará cuales variables son estas

```{r}
apply(X = is.na(data), MARGIN = 2, FUN = sum)

```

Con lo anterior se observa que las variables: dti_joint, open_il_6m, open_il_24m, total_bal_il, open_rv_12m, max_bal_bc, total_cu_tl, annual_inc_joint, verification_status_joint, open_acc_6m, open_il_12m, mths_since_rcnt_il, il_util, open_rv_24m, all_util, inq_fi, inq_last_12m poseen puros valores N/A, por lo que a continuación serán eliminadas del dataset.

También se borran la variables id url, desc, zip_code, application_type, ya que no nos aportarán en el modelo a construir.

```{r}
data <- subset(data,select = -c(dti_joint, open_il_6m, open_il_24m, total_bal_il, open_rv_12m, max_bal_bc, total_cu_tl, annual_inc_joint, verification_status_joint, open_acc_6m, open_il_12m, mths_since_rcnt_il, il_util, open_rv_24m, all_util, inq_fi, inq_last_12m, id, url, desc, zip_code, application_type))
```

Se verifica el tipo de dato de las variables en el dataset

```{r}
sapply(data, class)
```

En el dataset tenemos variables de tipo numericas y de tipo character, para facilidad en el trabajo, se cambian las variables de tipo character a factor.

```{r}
dplyr::count(data, data$application_type, sort = TRUE)
```

```{r}
data$term <- as.factor(data$term)
data$grade <- as.factor(data$grade)
data$sub_grade <- as.factor(data$sub_grade)
data$emp_title <- as.factor(data$emp_title)
data$emp_length <- as.factor(data$emp_length)
data$home_ownership <- as.factor(data$home_ownership)
data$verification_status <- as.factor(data$verification_status)
data$issue_d <- as.factor(data$issue_d)
data$loan_status <- as.factor(data$loan_status)
data$pymnt_plan <- as.factor(data$pymnt_plan)
data$purpose <- as.factor(data$purpose)
data$title <- as.factor(data$title)
data$addr_state <- as.factor(data$addr_state)
data$initial_list_status <- as.factor(data$initial_list_status)
```

Se eliminan las variables addr_state, sub_grade, emp_title, issue_d, title

```{r}
data <- subset(data,select = -c(addr_state, sub_grade, emp_title, issue_d, title))
```

Se procede a separar las variables en numéricas, de cadena y de tipo fecha

```{r}
variables_num <- sapply(data, is.numeric)
data_num <- data[variables_num]
variables_cat <- sapply(data, is.factor)
data_cat <- data[variables_cat]
data_tipoFecha <- subset(data,select= c(earliest_cr_line, last_pymnt_d, next_pymnt_d, last_credit_pull_d))
```

Se analiza si existen registro duplicados

```{r}
data_duplicated <- duplicated(data)
sum(data_duplicated)
```

No existen registros duplicados.

## Análisis de Variable categóricas

Se visualiza un resume de las variables categoricas

```{r}
summary(data_cat)
```

Se visualiza si las variables categóricas poseen valores N/A

```{r}
apply(X = is.na(data_cat), MARGIN = 2, FUN = sum)
```

Se separa la variable loan_status de las demás variables categóricas.

```{r}
Y<- subset(data_cat, select = loan_status)
data_cat <- subset(data_cat, select = -c(loan_status))
```

Se observa que no hay valores N/A en las variables categóricas. A continuación, se crean las variables dummys para cada variable categorica

```{r}
library(caret)
onehotencoding <- dummyVars(~.,data = data_cat)
data_cat_dummy <- as.data.frame(predict(onehotencoding,data_cat))
```

## Análisis de Variable numéricas

```{r}
summary(data_num)
```

Se eliminan las variables mths_since_last_delinq, mths_since_last_record, mths_since_last_major_derog, tot_coll_amt, tot_cur_bal, total_rev_hi_lim, por la cantidad tan elevada de valores N/A que poseen estas variables.

```{r}
data_num <- subset(data_num, select= -c(mths_since_last_delinq, mths_since_last_record, mths_since_last_major_derog, tot_coll_amt, tot_cur_bal, total_rev_hi_lim))
```

A continuación, se completa las variables numéricas que poseean valores N/A cambiandolas por el valor de la mediana de cada atributo.

```{r}
data_num$annual_inc[is.na(data_num$annual_inc)] <- 63000
data_num$delinq_2yrs[is.na(data_num$delinq_2yrs)] <- 0.0000
data_num$inq_last_6mths[is.na(data_num$inq_last_6mths)] <- 0.0000
data_num$open_acc[is.na(data_num$open_acc)] <- 10.00
data_num$pub_rec[is.na(data_num$pub_rec)] <- 0.0000
data_num$revol_util[is.na(data_num$revol_util)] <- 57.60
data_num$total_acc[is.na(data_num$total_acc)] <- 23.00
data_num$collections_12_mths_ex_med[is.na(data_num$collections_12_mths_ex_med)] <- 0.0000
data_num$acc_now_delinq[is.na(data_num$acc_now_delinq)] <- 0.000000

```

```{r}
summary(data_num)
```

## Modificación de la variable objetivo

Se crea una función para la transformación de la variable loan_status.

```{r}
transformacion_varialeObjetivo <- function(valor){
  valor_nuevo <- ""
  if ((valor == "Late (31-120 days)") | (valor == "Default")){
    valor_nuevo <- "Incumple"
  }else{
    valor_nuevo <- "Cumple"
  }
  return(valor_nuevo)
}
```

Se aplica la función creada a la variable loan_status.

```{r}
Y <- sapply(Y,transformacion_varialeObjetivo)
```

Estandarización

Se estandarizan las variables numéricas

```{r}
media_num <- colMeans(data_num)
sd_num <- apply(data_num,2,sd)
data_num_std <- scale(data_num,center = media_num, scale = sd_num)
```
